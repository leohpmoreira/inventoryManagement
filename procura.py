# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'PROCURA.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sqlite3

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_procura(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(973, 545)
        Form.setStyleSheet("color:rgb(249, 234, 195);")
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(100, 40, 701, 51))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(26)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("color:rgb(249, 234, 195);")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(Form)
        self.lineEdit.setGeometry(QtCore.QRect(100, 130, 211, 51))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("QLineEdit {\n"
                                    "    border: 3px solid rgb(245, 222, 179);\n"
                                    "    border-radius: 10px;\n"
                                    "    padding: 15px;\n"
                                    "    background-color:rgb(249, 234, 195);\n"
                                    "    color: rgb(45, 45, 45);\n"
                                    "}\n"
                                    "QLineEdit:hover {\n"
                                    "    border: 3px solid rgb(55, 55, 55);\n"
                                    "}\n"
                                    "QLineEdit:focus {\n"
                                    "    border: 3px solid rgb(135, 206, 250);\n"
                                    "    color: rgb(45, 45, 45);\n"
                                    "}")
        self.lineEdit.setText("")
        self.lineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(Form)
        self.lineEdit_2.setGeometry(QtCore.QRect(390, 130, 211, 51))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setStyleSheet("QLineEdit {\n"
                                      "    border: 3px solid rgb(245, 222, 179);\n"
                                      "    border-radius: 10px;\n"
                                      "    padding: 15px;\n"
                                      "    background-color:rgb(249, 234, 195);\n"
                                      "    color: rgb(45, 45, 45);\n"
                                      "}\n"
                                      "QLineEdit:hover {\n"
                                      "    border: 3px solid rgb(55, 55, 55);\n"
                                      "}\n"
                                      "QLineEdit:focus {\n"
                                      "    border: 3px solid rgb(135, 206, 250);\n"
                                      "    color: rgb(45, 45, 45);\n"
                                      "}")
        self.lineEdit_2.setText("")
        self.lineEdit_2.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_2 = QtWidgets.QLabel(Form)
        self.label_2.setGeometry(QtCore.QRect(320, 130, 61, 51))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.tableWidget = QtWidgets.QTableWidget(Form)
        self.tableWidget.setGeometry(QtCore.QRect(100, 200, 700, 300))
        self.tableWidget.setMinimumSize(QtCore.QSize(600, 500))
        self.tableWidget.setMaximumSize(QtCore.QSize(600, 500))
        self.tableWidget.setStyleSheet("QTableWidget {\n"
                                       "    border: 3px solid rgb(245, 222, 179);\n"
                                       "    border-radius: 10px;\n"
                                       "    padding: 15px;\n"
                                       "    background-color:rgb(249, 234, 195);\n"
                                       "    color: rgb(45, 45, 45);\n"
                                       "}")
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(7)
        self.tableWidget.setRowCount(1)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(7, item)
        self.Remove = QtWidgets.QPushButton(Form)
        self.Remove.clicked.connect(lambda: self.search())
        self.Remove.setGeometry(QtCore.QRect(640, 130, 151, 51))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setBold(True)
        font.setWeight(75)
        self.Remove.setFont(font)
        self.Remove.setStyleSheet("QPushButton{    \n"
                                  "    border: 3px solid rgb(245, 222, 179);\n"
                                  "    border-radius: 25px;\n"
                                  "    background-color:rgb(249, 234, 195);\n"
                                  "    color: rgb(45, 45, 45);\n"
                                  "}\n"
                                  "QPushButton:hover{    \n"
                                  "    border: 3px solid rgb(55, 55, 55);\n"
                                  "}\n"
                                  "QPushButton:pressed{    \n"
                                  "    background-color: rgb(135, 206, 250);\n"
                                  "    color: rgb(45, 45, 45);\n"
                                  "}")
        self.Remove.setObjectName("Remove")
        self.frame_erro = QtWidgets.QFrame(Form)
        self.frame_erro.setGeometry(QtCore.QRect(170, 10, 450, 29))
        self.frame_erro.setMaximumSize(QtCore.QSize(450, 16777215))
        self.frame_erro.setStyleSheet("background-color: rgb(255, 85, 127);\n"
                                      "border-radius: 10px;")
        self.frame_erro.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_erro.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_erro.setObjectName("frame_erro")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame_erro)
        self.horizontalLayout_3.setContentsMargins(10, 3, 10, 3)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_erro = QtWidgets.QLabel(self.frame_erro)
        self.label_erro.setAlignment(QtCore.Qt.AlignCenter)
        self.label_erro.setObjectName("label_erro")
        self.horizontalLayout_3.addWidget(self.label_erro)
        self.pushButton_close = QtWidgets.QPushButton(self.frame_erro)
        self.pushButton_close.clicked.connect(lambda: self.hide_error())
        self.pushButton_close.setMaximumSize(QtCore.QSize(20, 20))
        self.pushButton_close.setStyleSheet("QPushButton {\n"
                                            "    border-radius: 5px;    \n"
                                            "    background-image: url(:/Close_Image/Images/cil-x.png);\n"
                                            "    background-position: center;\n"
                                            "    background-color: rgb(255, 0, 127);\n"
                                            "}\n"
                                            "QPushButton:hover {\n"
                                            "    background-color: rgb(6, 21, 60);\n"
                                            "    color: rgb(200, 200, 200);\n"
                                            "}\n"
                                            "QPushButton:pressed {\n"
                                            "    background-color: rgb(35, 35, 35);\n"
                                            "    color: rgb(200, 200, 200);\n"
                                            "}")
        self.pushButton_close.setText("")
        self.pushButton_close.setObjectName("pushButton_close")
        self.horizontalLayout_3.addWidget(self.pushButton_close)
        self.pushButton_close.setVisible(False)
        self.label_erro.setVisible(False)
        self.frame_erro.setVisible(False)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def search(self):
        con = sqlite3.connect("inventory.db")
        cur = con.cursor()
        cod = str(self.lineEdit.text())
        name = str(self.lineEdit_2.text())
        if cod:
            try:
                cur.execute("SELECT * FROM Estoque WHERE Cod_prod = :cod", {'cod': cod})
                products = cur.fetchall()
                self.tableWidget.setItem(0, 0, QtWidgets.QTableWidgetItem(str(products[0][0])))
                self.tableWidget.setItem(0, 2, QtWidgets.QTableWidgetItem(str(products[0][1])))
                cur.execute("SELECT * FROM Produtos WHERE Cod = :cod", {'cod': cod})
                products = cur.fetchall()
                self.tableWidget.setItem(0, 1, QtWidgets.QTableWidgetItem(str(products[0][2])))
                self.tableWidget.setItem(0, 3, QtWidgets.QTableWidgetItem(str(products[0][1])))
                self.tableWidget.setItem(0, 4, QtWidgets.QTableWidgetItem(str(products[0][3])))
                self.tableWidget.setItem(0, 5, QtWidgets.QTableWidgetItem(str(products[0][4])))
                self.tableWidget.setItem(0, 6, QtWidgets.QTableWidgetItem(str(products[0][5])))
                self.lineEdit.clear()
                self.lineEdit_2.clear()
            except:
                print("codigo invalido")
                self.show_error()
        else:
            try:
                cur.execute("SELECT * FROM Produtos WHERE Nome = :name", {'name': name})
                products = cur.fetchall()
                self.tableWidget.setRowCount(len(products))
                rownumber = 0
                for row in products:
                    self.tableWidget.setItem(rownumber, 1, QtWidgets.QTableWidgetItem(str(row[2])))
                    self.tableWidget.setItem(rownumber, 3, QtWidgets.QTableWidgetItem(str(row[1])))
                    self.tableWidget.setItem(rownumber, 4, QtWidgets.QTableWidgetItem(str(row[3])))
                    self.tableWidget.setItem(rownumber, 5, QtWidgets.QTableWidgetItem(str(row[4])))
                    self.tableWidget.setItem(rownumber, 6, QtWidgets.QTableWidgetItem(str(row[5])))
                    cur.execute("SELECT * FROM Estoque WHERE Cod_prod = :cod", {'cod': row[0]})
                    product = cur.fetchone()
                    self.tableWidget.setItem(rownumber, 0, QtWidgets.QTableWidgetItem(str(product[0])))
                    self.tableWidget.setItem(rownumber, 2, QtWidgets.QTableWidgetItem(str(product[1])))
                    rownumber += 1
                self.lineEdit.clear()
                self.lineEdit_2.clear()
            except:
                print("nome invalido")
                self.show_error()
        cur.close()
        con.close()

    def hide_error(self):
        self.pushButton_close.setVisible(False)
        self.label_erro.setVisible(False)
        self.frame_erro.setVisible(False)

    def show_error(self):
        self.pushButton_close.setVisible(True)
        self.label_erro.setVisible(True)
        self.frame_erro.setVisible(True)
        self.lineEdit.clear()
        self.lineEdit_2.clear()

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label.setText(_translate("Form", "PROCURAR PRODUTO"))
        self.lineEdit.setPlaceholderText(_translate("Form", "CÓDIGO DO PRODUTO"))
        self.lineEdit_2.setPlaceholderText(_translate("Form", "NOME DO PRODUTO"))
        self.label_2.setText(_translate("Form", "OU"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Form", "Cod. Prod"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Form", "Produto"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("Form", "Quantidade"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("Form", "Categoria"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("Form", "Fornecedor"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("Form", "Custo"))
        item = self.tableWidget.horizontalHeaderItem(6)
        item.setText(_translate("Form", "Preço"))
        self.Remove.setText(_translate("Form", "PROCURAR"))
        self.label_erro.setText(_translate("Form", "Código ou nome inválido"))
